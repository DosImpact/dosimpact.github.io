"use strict";(self.webpackChunkdosimpact_blog=self.webpackChunkdosimpact_blog||[]).push([[2517],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),g=a,d=m["".concat(l,".").concat(g)]||m[g]||u[g]||s;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=g;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},6161:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const s={sidebar_position:2},o="Zod",i={unversionedId:"g-fe/react/thrid-party/thrid-2-zod",id:"g-fe/react/thrid-party/thrid-2-zod",title:"Zod",description:"- Zod",source:"@site/docs/g-fe/4-react/5-thrid-party/thrid-2-zod.md",sourceDirName:"g-fe/4-react/5-thrid-party",slug:"/g-fe/react/thrid-party/thrid-2-zod",permalink:"/docs/g-fe/react/thrid-party/thrid-2-zod",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/g-fe/4-react/5-thrid-party/thrid-2-zod.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"frontEnd",previous:{title:"\ucc44\ub110\ud1a1 \uc5f0\ub3d9\ud558\uae30",permalink:"/docs/g-fe/react/thrid-party/thrid-1-channeltalk"},next:{title:"6.NextJS",permalink:"/docs/category/6nextjs"}},l={},c=[{value:"eg) Basic - UserSchema",id:"eg-basic---userschema",level:2},{value:"eg) gpt tools",id:"eg-gpt-tools",level:2},{value:"eg) streamObject",id:"eg-streamobject",level:2},{value:"eg) refine, filetype",id:"eg-refine-filetype",level:2},{value:"eg) SignUpSchema, LoginSchema",id:"eg-signupschema-loginschema",level:2}],p={toc:c},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"zod"},"Zod"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#zod"},"Zod"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#eg-basic---userschema"},"eg) Basic - UserSchema")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#eg-gpt-tools"},"eg) gpt tools")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#eg-streamobject"},"eg) streamObject")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#eg-refine-filetype"},"eg) refine, filetype")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#eg-signupschema-loginschema"},"eg) SignUpSchema, LoginSchema"))))),(0,a.kt)("p",null,"Zod \uc65c \uc0ac\uc6a9\ud558\ub294\uac00?  "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\uc720\ud6a8\uc131 \uac80\uc99d \ub77c\uc774\ube0c\ub7ec\ub9ac  "),(0,a.kt)("li",{parentName:"ul"},"\ud0c0\uc785\ucd94\ub860 \uae30\ub2a5 ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const UserSchema = z.object({\n  name: z.string(),\n  email: z.string().email(),\n});\ntype User = z.infer<typeof UserSchema>;\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"ai-sdk\uc640 \uc5f0\ub3d9\ud574\uc11c \uc0ac\uc6a9 \uac00\ub2a5, json \uc2a4\ud0a4\ub9c8 \ubaa8\ub4dc\uc5d0 zod\ub97c \uc5f0\uacb0\ud558\uc5ec \ubcf5\uc7a1\ud55c \uad6c\uc870\uc758 \uc751\ub2f5 \uac00\ub2a5.  ")),(0,a.kt)("h2",{id:"eg-basic---userschema"},"eg) Basic - UserSchema"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"z.object : \uac1d\uccb4\uc758 \uad6c\uc870 \uc815\uc758  "),(0,a.kt)("li",{parentName:"ul"},"UserSchema.parse(body) : \uc720\ud6a8\uc131 \uac80\uc0ac \uc218\ud589  "),(0,a.kt)("li",{parentName:"ul"},"error instanceof z.ZodError, error.issue : \uc720\ud6a8\uc131 \uac80\uc0ac \uc2e4\ud328 \uc560\ub7ec  ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// TS : app/api/hello/route.ts\nimport { z } from "zod";\n\n// 1.\uc2a4\ud0a4\ub9c8 \uc815\uc758\nconst UserSchema = z.object({\n  name: z.string().min(3, { message: "\ucd5c\uc18c 3\uae00\uc790" }),\n  email: z.string().email({ message: "\uc62c\ubc14\ub978 \uc774\uba54\uc77c \ud615\uc2dd\uc774 \uc544\ub2c8\ub2e4." }),\n});\n\nexport const POST = async (request: Request) => {\n  try {\n    const body = await request.json();\n    // 2.\uc2a4\ud0a4\ub9c8 \ud14c\uc2a4\ud2b8  \n    const user = UserSchema.parse(body);\n\n    return NextResponse.json({\n      success: true,\n      user,\n    });\n  } catch (error) {\n    console.error(error);\n\n    // SyntaxError: Unexpected end of JSON input\n    if (error instanceof SyntaxError) {\n      return NextResponse.json(\n        { error: "Invalid JSON format" },\n        { status: 400 }\n      );\n    }\n\n    // 3.zod error\n    if (error instanceof z.ZodError) {\n      const errorMessages = error.issues\n        .map((issue) => issue.message)\n        .join(", ");\n\n      return NextResponse.json(\n        { error: "Invalid user data : " + errorMessages },\n        { status: 400 }\n      );\n    }\n\n    // internal server error\n    return NextResponse.json(\n      { error: "Internal server error" },\n      { status: 500 }\n    );\n  }\n};\n\n')),(0,a.kt)("h2",{id:"eg-gpt-tools"},"eg) gpt tools"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"free weahter api : ",(0,a.kt)("a",{parentName:"li",href:"https://api.open-meteo.com/v1/forecast?latitude=38&longitude=123&current=temperature_2m&hourly=temperature_2m&daily=sunrise,sunset&timezone=auto"},"https://api.open-meteo.com/v1/forecast?latitude=38&longitude=123","\xa4","t=temperature_2m&hourly=temperature_2m&daily=sunrise,sunset&timezone=auto"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'  const result = await streamText({\n    model: customModel(model.apiIdentifier),\n    system: systemPrompt,\n    messages: coreMessages,\n    maxSteps: 5,\n    experimental_activeTools: allTools,\n    tools: {\n      getWeather: {\n        description: "Get the current weather at a location",\n        // zod \uc758 \uc2a4\ud0a4\ub9c8 \uc815\uc758\ub97c \ud30c\ub77c\ubbf8\ud130\uc5d0 \ub123\ub294\ub2e4.  \n        parameters: z.object({\n          latitude: z.number(),\n          longitude: z.number(),\n        }),\n        execute: async ({ latitude, longitude }) => {\n          const response = await fetch(\n            `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current=temperature_2m&hourly=temperature_2m&daily=sunrise,sunset&timezone=auto`\n          );\n\n          const weatherData = await response.json();\n          return weatherData;\n        },\n      },\n')),(0,a.kt)("h2",{id:"eg-streamobject"},"eg) streamObject"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'const { elementStream } = await streamObject({\n  model: customModel(model.apiIdentifier),\n  system:\n    "You are a help writing assistant. Given a piece of writing, please offer suggestions to improve the piece of writing and describe the change. It is very important for the edits to contain full sentences instead of just words. Max 5 suggestions.",\n  prompt: document.content,\n  output: "array",\n  schema: z.object({\n    originalSentence: z.string().describe("The original sentence"),\n    suggestedSentence: z.string().describe("The suggested sentence"),\n    description: z\n      .string()\n      .describe("The description of the suggestion"),\n  }),\n});\n')),(0,a.kt)("h2",{id:"eg-refine-filetype"},"eg) refine, filetype"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"refine : \uc815\uc81c\ud558\ub2e4 ( \ud30c\uc77c\uc758 \uc6a9\ub7c9, \uc774\ubbf8\uc9c0 \ud0c0\uc785 \ub4f1 \uc815\uc758\uac00\ub2a5)  ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// Use Blob instead of File since File is not available in Node.js environment\nconst FileSchema = z.object({\n  file: z\n    .instanceof(Blob)\n    .refine((file) => file.size <= 5 * 1024 * 1024, {\n      message: "File size should be less than 5MB",\n    })\n    // Update the file type based on the kind of files you want to accept\n    .refine((file) => ["image/jpeg", "image/png"].includes(file.type), {\n      message: "File type should be JPEG or PNG",\n    }),\n});\n\n')),(0,a.kt)("h2",{id:"eg-signupschema-loginschema"},"eg) SignUpSchema, LoginSchema"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { z } from "zod";\n\nexport const SignUpSchema = z.object({\n  name: z\n    .string()\n    .min(1, { message: "\uc774\ub984\uc744 \uc785\ub825\ud574\uc8fc\uc138\uc694." })\n    .regex(/^[a-zA-Z\u3131-\u314e\uac00-\ud7a3]+$/, {\n      message: "\uc774\ub984\uc740 \ubb38\uc790\ub9cc \uc785\ub825\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.",\n    }),\n  email: z.string().email({ message: "\uc62c\ubc14\ub978 \uc774\uba54\uc77c \ud615\uc2dd\uc744 \uc785\ub825\ud574\uc8fc\uc138\uc694." }),\n  password: z\n    .string()\n    .min(8, { message: "\ud328\uc2a4\uc6cc\ub4dc\ub294 \ucd5c\uc18c 8\uc790 \uc774\uc0c1\uc774\uc5b4\uc57c \ud569\ub2c8\ub2e4." })\n    .regex(/[A-Z]/, {\n      message: "\ud328\uc2a4\uc6cc\ub4dc\ub294 \ucd5c\uc18c 1\uac1c \uc774\uc0c1\uc758 \ub300\ubb38\uc790\ub97c \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4.",\n    })\n    .regex(/[a-z]/, {\n      message: "\ud328\uc2a4\uc6cc\ub4dc\ub294 \ucd5c\uc18c 1\uac1c \uc774\uc0c1\uc758 \uc18c\ubb38\uc790\ub97c \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4.",\n    })\n    .regex(/[0-9]/, {\n      message: "\ud328\uc2a4\uc6cc\ub4dc\ub294 \ucd5c\uc18c 1\uac1c \uc774\uc0c1\uc758 \uc22b\uc790\ub97c \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4.",\n    })\n    .regex(/[\\W_]/, {\n      message: "\ud328\uc2a4\uc6cc\ub4dc\ub294 \ucd5c\uc18c 1\uac1c \uc774\uc0c1\uc758 \ud2b9\uc218\ubb38\uc790\ub97c \ud3ec\ud568\ud574\uc57c \ud569\ub2c8\ub2e4.",\n    }),\n});\n\nexport const LoginSchema = z.object({\n  email: z.string().email({\n    message: "\uc62c\ubc14\ub978 \uc774\uba54\uc77c \ud615\uc2dd\uc744 \uc785\ub825\ud574\uc8fc\uc138\uc694.",\n  }),\n  password: z.string().min(1, {\n    message: "\ud328\uc2a4\uc6cc\ub4dc\ub97c \uc785\ub825\ud574\uc8fc\uc138\uc694.",\n  }),\n});\n')))}u.isMDXComponent=!0}}]);