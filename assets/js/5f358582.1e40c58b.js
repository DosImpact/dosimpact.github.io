"use strict";(self.webpackChunkdosimpact_blog=self.webpackChunkdosimpact_blog||[]).push([[6752],{3905:(e,n,a)=>{a.d(n,{Zo:()=>i,kt:()=>k});var r=a(7294);function t(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function _(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,r)}return a}function A(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?_(Object(a),!0).forEach((function(n){t(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):_(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function E(e,n){if(null==e)return{};var a,r,t=function(e,n){if(null==e)return{};var a,r,t={},_=Object.keys(e);for(r=0;r<_.length;r++)a=_[r],n.indexOf(a)>=0||(t[a]=e[a]);return t}(e,n);if(Object.getOwnPropertySymbols){var _=Object.getOwnPropertySymbols(e);for(r=0;r<_.length;r++)a=_[r],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(t[a]=e[a])}return t}var T=r.createContext({}),o=function(e){var n=r.useContext(T),a=n;return e&&(a="function"==typeof e?e(n):A(A({},n),e)),a},i=function(e){var n=o(e.components);return r.createElement(T.Provider,{value:n},e.children)},s="mdxType",K={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},R=r.forwardRef((function(e,n){var a=e.components,t=e.mdxType,_=e.originalType,T=e.parentName,i=E(e,["components","mdxType","originalType","parentName"]),s=o(a),R=t,k=s["".concat(T,".").concat(R)]||s[R]||K[R]||_;return a?r.createElement(k,A(A({ref:n},i),{},{components:a})):r.createElement(k,A({ref:n},i))}));function k(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var _=a.length,A=new Array(_);A[0]=R;var E={};for(var T in n)hasOwnProperty.call(n,T)&&(E[T]=n[T]);E.originalType=e,E[s]="string"==typeof e?e:t,A[1]=E;for(var o=2;o<_;o++)A[o]=a[o];return r.createElement.apply(null,A)}return r.createElement.apply(null,a)}R.displayName="MDXCreateElement"},9402:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>T,contentTitle:()=>A,default:()=>K,frontMatter:()=>_,metadata:()=>E,toc:()=>o});var r=a(7462),t=(a(7294),a(3905));const _={sidebar_position:3},A="kafka install with docker",E={unversionedId:"g-be/kafka/ka003",id:"g-be/kafka/ka003",title:"kafka install with docker",description:"single",source:"@site/docs/g-be/3-kafka/ka003.md",sourceDirName:"g-be/3-kafka",slug:"/g-be/kafka/ka003",permalink:"/docs/g-be/kafka/ka003",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/g-be/3-kafka/ka003.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"backEnd",previous:{title:"\ucd08\ubcf4\uc790\ub97c \uc704\ud55c apache kafka - 2",permalink:"/docs/g-be/kafka/ka002"},next:{title:"NestJS",permalink:"/docs/category/nestjs"}},T={},o=[{value:"single",id:"single",level:2},{value:"cluster",id:"cluster",level:2},{value:"ref",id:"ref",level:2}],i={toc:o},s="wrapper";function K(e){let{components:n,...a}=e;return(0,t.kt)(s,(0,r.Z)({},i,a,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"kafka-install-with-docker"},"kafka install with docker"),(0,t.kt)("h2",{id:"single"},"single"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-yml"},"networks:\n  kafka_network:\n\nvolumes:\n  Kafka00_Standalone:\n    driver: local\n\nservices:\n  Kafka00Service:\n    image: bitnami/kafka:3.5.1-debian-11-r72\n    restart: always\n    container_name: Kafka00Container\n    ports:\n      - '9094:9094'\n    environment:\n      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true\n      # KRaft settings\n      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@Kafka00Service:9093\n      - KAFKA_CFG_NODE_ID=0\n      - KAFKA_CFG_PROCESS_ROLES=controller,broker\n      # Listeners\n      - ALLOW_PLAINTEXT_LISTENER=yes\n      # \ud504\ub85c\ub4c0\uc2a4\ub098 \ucee8\uc288\uba38\uc5d0 \uc81c\uacf5\ud560 \uc8fc\uc18c, \ub85c\uceec PC\uc5d0\uc11c \uc811\uadfc\ud560 \ub54c 127.0.0.1:10000 \ub97c \uc774\uc6a9\ud55c\ub2e4\n      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094\n      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://Kafka00Service:9092,EXTERNAL://127.0.0.1:9094\n      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT\n      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER\n      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT\n    networks:\n      - kafka_network\n    volumes:\n      - \"Kafka00_Standalone:/bitnami/kafka\"\n  \n  KafkaWebUiService:\n    image: provectuslabs/kafka-ui:latest\n    restart: always\n    container_name: KafkaWebUiContainer\n    ports:\n      - '8080:8080'\n    environment:\n      - KAFKA_CLUSTERS_0_NAME=Kafka-V35\n      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=Kafka00Service:9092\n      - DYNAMIC_CONFIG_ENABLED=true\n      - KAFKA_CLUSTERS_0_AUDIT_TOPICAUDITENABLED=true\n      - KAFKA_CLUSTERS_0_AUDIT_CONSOLEAUDITENABLED=true\n      #- KAFKA_CLUSTERS_0_METRICS_PORT=9999\n    networks:\n      - kafka_network\n\n# ref : Docker Compose \ub85c Silicon Mac\uc5d0\uc11c KRaft, Kafka Cluster \uad6c\ucd95\ud558\uae30\n# https://breezymind.com/silicon-mac-kafka-cluster-docker-compose/\n\n")),(0,t.kt)("h2",{id:"cluster"},"cluster"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-yml"},"networks:\n  kafka_network:\n\nvolumes:\n  Kafka00:\n    driver: local\n  Kafka01:\n    driver: local\n  Kafka02:\n    driver: local\n    \nservices:\n##Kafka 00    \n  Kafka00Service:\n    image: bitnami/kafka:3.5.1-debian-11-r72\n    restart: unless-stopped\n    container_name: Kafka00Container\n    ports:\n      - '10000:9094'\n    environment:\n      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true\n      # KRaft settings\n      - KAFKA_CFG_BROKER_ID=0\n      - KAFKA_CFG_NODE_ID=0\n      # KRAFT_CLUSTER_ID \uc124\uc815\uc73c\ub85c \ubaa8\ub4e0 \ube0c\ub85c\ucee4\uac00 \ub3d9\uc77c\ud55c ID\ub97c \uac00\uc9c4\ub2e4\n      - KAFKA_KRAFT_CLUSTER_ID=HsDBs9l6UUmQq7Y5E6bNlw\n      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@Kafka00Service:9093,1@Kafka01Service:9093,2@Kafka02Service:9093\n      - KAFKA_CFG_PROCESS_ROLES=controller,broker\n      # Listeners\n      - ALLOW_PLAINTEXT_LISTENER=yes\n      # \ube0c\ub85c\ucee4\uac00 \ub0b4\ubd80\uc801\uc73c\ub85c \ud1b5\uc2e0\ud558\ub294 \uc8fc\uc18c\n      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094\n      # \ud504\ub85c\ub4c0\uc2a4\ub098 \ucee8\uc288\uba38\uc5d0 \uc81c\uacf5\ud560 \uc8fc\uc18c, \ub85c\uceec PC\uc5d0\uc11c \uc811\uadfc\ud560 \ub54c 127.0.0.1:10000 \ub97c \uc774\uc6a9\ud55c\ub2e4\n      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://Kafka00Service:9092,EXTERNAL://127.0.0.1:10000\n      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT\n      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER\n      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT\n      # Clustering\n      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2\n    networks:\n      - kafka_network\n    volumes:\n      - \"Kafka00:/bitnami/kafka\"\n##Kafka 01\n  Kafka01Service:\n    image: bitnami/kafka:3.5.1-debian-11-r72\n    restart: unless-stopped\n    container_name: Kafka01Container\n    ports:\n      - '10001:9094'\n    environment:\n      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true\n      # KRaft settings\n      - KAFKA_CFG_BROKER_ID=1\n      - KAFKA_CFG_NODE_ID=1\n      - KAFKA_KRAFT_CLUSTER_ID=HsDBs9l6UUmQq7Y5E6bNlw\n      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@Kafka00Service:9093,1@Kafka01Service:9093,2@Kafka02Service:9093\n      - KAFKA_CFG_PROCESS_ROLES=controller,broker\n      # Listeners\n      - ALLOW_PLAINTEXT_LISTENER=yes\n      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094\n      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://Kafka01Service:9092,EXTERNAL://127.0.0.1:10001\n      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT\n      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER\n      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT\n      # Clustering\n      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2\n    networks:\n      - kafka_network\n    volumes:\n      - \"Kafka01:/bitnami/kafka\"\n##Kafka 02\n  Kafka02Service:\n    image: bitnami/kafka:3.5.1-debian-11-r72\n    restart: unless-stopped\n    container_name: Kafka02Container\n    ports:\n      - '10002:9094'\n    environment:\n      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true\n      # KRaft settings\n      - KAFKA_CFG_BROKER_ID=2\n      - KAFKA_CFG_NODE_ID=2\n      - KAFKA_KRAFT_CLUSTER_ID=HsDBs9l6UUmQq7Y5E6bNlw\n      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@Kafka00Service:9093,1@Kafka01Service:9093,2@Kafka02Service:9093\n      - KAFKA_CFG_PROCESS_ROLES=controller,broker\n      # Listeners\n      - ALLOW_PLAINTEXT_LISTENER=yes\n      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094\n      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://Kafka02Service:9092,EXTERNAL://127.0.0.1:10002\n      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT\n      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER\n      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT\n      # Clustering\n      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3\n      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2\n    networks:\n      - kafka_network\n    volumes:\n      - \"Kafka02:/bitnami/kafka\"\n      \n  KafkaWebUiService:\n    image: provectuslabs/kafka-ui:latest\n    restart: unless-stopped\n    container_name: KafkaWebUiContainer\n    ports:\n      - '8080:8080'\n    environment:\n      - KAFKA_CLUSTERS_0_NAME=Local-Kraft-Cluster\n      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=Kafka00Service:9092,Kafka01Service:9092,Kafka02Service:9092\n      - DYNAMIC_CONFIG_ENABLED=true\n      - KAFKA_CLUSTERS_0_AUDIT_TOPICAUDITENABLED=true\n      - KAFKA_CLUSTERS_0_AUDIT_CONSOLEAUDITENABLED=true\n      #- KAFKA_CLUSTERS_0_METRICS_PORT=9999\n    networks:\n      - kafka_network\n\n")),(0,t.kt)("h2",{id:"ref"},"ref"),(0,t.kt)("p",null,(0,t.kt)("a",{parentName:"p",href:"https://breezymind.com/silicon-mac-kafka-cluster-docker-compose/"},"https://breezymind.com/silicon-mac-kafka-cluster-docker-compose/"),"\n",(0,t.kt)("a",{parentName:"p",href:"https://github.com/ArminShoeibi/KafkaDockerCompose/blob/main/docker-compose-cluster.yml"},"https://github.com/ArminShoeibi/KafkaDockerCompose/blob/main/docker-compose-cluster.yml")))}K.isMDXComponent=!0}}]);