"use strict";(self.webpackChunkdosimpact_blog=self.webpackChunkdosimpact_blog||[]).push([[3199],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||l[f]||i;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},46537:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={sidebar_position:2},o="ai/react",s={unversionedId:"g-fe/react/thrid-party/thrid-3-ai",id:"g-fe/react/thrid-party/thrid-3-ai",title:"ai/react",description:"Ref//sdk.vercel.ai/docs/reference/ai-sdk-ui/use-chat#usechat",source:"@site/docs/g-fe/4-react/5-thrid-party/thrid-3-ai.md",sourceDirName:"g-fe/4-react/5-thrid-party",slug:"/g-fe/react/thrid-party/thrid-3-ai",permalink:"/docs/g-fe/react/thrid-party/thrid-3-ai",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/g-fe/4-react/5-thrid-party/thrid-3-ai.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"frontEnd",previous:{title:"Zod",permalink:"/docs/g-fe/react/thrid-party/thrid-2-zod"},next:{title:"6.NextJS",permalink:"/docs/category/6nextjs"}},c={},p=[{value:"eg) Basic usage",id:"eg-basic-usage",level:2}],u={toc:p},d="wrapper";function l(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"aireact"},"ai/react"),(0,a.kt)("p",null,"Ref : ",(0,a.kt)("a",{parentName:"p",href:"https://sdk.vercel.ai/docs/reference/ai-sdk-ui/use-chat#usechat"},"https://sdk.vercel.ai/docs/reference/ai-sdk-ui/use-chat#usechat")),(0,a.kt)("h2",{id:"eg-basic-usage"},"eg) Basic usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'"use client";\n\nimport { generateUUID } from "@/lib/utils";\nimport { useChat } from "ai/react";\nimport React from "react";\n\n/*\neg) messages sample  \n[\n    {\n        "role": "user",\n        "content": "my name is jay",\n        "id": "bPclYKo27gxhIoWn",\n        "createdAt": "2024-12-12T12:28:11.371Z"\n    },\n    {\n        "id": "NPFi3J8vWw7Sa5uw",\n        "role": "assistant",\n        "content": "Nice to meet you, Jay! How can I assist you today?",\n        "createdAt": "2024-12-12T12:28:13.252Z",\n        "revisionId": "pDmdPLtSHFUvn3Bi"\n    }\n]*/\n\nconst ChatLite = ({ id }: { id: string }) => {\n  const {\n    messages,       // \uc9c0\uae08\uae4c\uc9c0\uc758 \ub204\uc801 \uba54\uc2dc\uc9c0 \ub9ac\uc2a4\ud2b8\n    setMessages,    // \uba54\uc2dc\uc9c0 setter, (api call \uc5c6\uc74c)\n    input,          // \uc0ac\uc6a9\uc790 \uc785\ub825 & setter\n    setInput,\n    handleSubmit,   // input\uc758 \ub0b4\uc6a9\uc744 \ubaa8\ub378\uc5d0 \uc804\uc1a1, message\uac1d\uccb4 \ucd94\uac00, input \ucd08\uae30\ud654\n    append,         // message \uac1d\uccb4 \ucd94\uac00\n    isLoading,\n    stop,           // abort the current API\n    data: streamingData, //\ucd5c\uadfc \uc751\ub2f5\ub370\uc774\ud130\uc758 \uc2a4\ud2b8\ub9bc\n  } = useChat({\n    api: "/api/chat", // endpoint, default /api/chat  \n    body: { id: id, modelId: "gpt-4o-mini" },\n  });\n\n  return (\n    <div>\n      {/* view */}\n      <div>{JSON.stringify(messages)}</div>\n      {/* input */}\n      <input value={input} onChange={(e) => setInput(e.target.value)} />\n      <button onClick={handleSubmit}>send</button>\n      {/* append */}\n      <div>\n        <button\n          onClick={() => append({ role: "user", content: "my name is jay" })}\n        >\n          Append suggested message!\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatLite;\n')))}l.isMDXComponent=!0}}]);